syntax = "proto3";

package raft;

service RaftNode {
    rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse) {}
    rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse) {}
    rpc ServeClient (ServeClientArgs) returns (ServeClientReply) {}
}

message ServeClientArgs {
  string request = 1;
}

message ServeClientReply {
  string data = 1;
  string leaderId = 2;
  bool success = 3;
}

message AppendEntriesRequest {
    int64 term = 1;
    int64 leaderId = 2;
    int64 prevLogIndex = 3;
    int64 prevLogTerm = 4;
    repeated LogEntry entries = 5;
    int64 leaderCommit = 6;
    float leaderLeaseDuration = 7;
    bool isHeartbeat = 8;
}

message AppendEntriesResponse {
    int64 term = 1;
    bool success = 2;
}

message RequestVoteRequest {
    int64 term = 1;
    int64 candidateId = 2;
    int64 lastLogIndex = 3;
    int64 lastLogTerm = 4;
}

message RequestVoteResponse {
    int64 term = 1;
    bool voteGranted = 2;
    int64 leaderLeaseDuration = 3;
} 

message LogEntry {
    int64 index = 1;
    int64 term = 2;
    string data = 3;
}
